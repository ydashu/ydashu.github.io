[{"content":"开发客户 海关数据 平台: B2B平台:阿里国际站、中国制造、商会、协会、贸促会 社媒平台:Linkedln、Facebook、Ins、Youtube 独立站 公司分配 线下开发:展会、地推 背调 分类与维度整理\n分类 维度 信息 公司介绍 公司名称\n官网（域名）\n总部所在地\n公司地址\n联系人\n邮箱 公司类型 私人企业\n家庭企业\n跨国集团\n上市公司\n分销商\n批发商 业务类型 零售商\n连锁大型商超\n区域门店\n线上B2B\n线上B2C 公司实力 人员规模\n营业规模\n主要市场\n主要客户群 产品线 价格定位\n销售定位 采购方式 B2B平台\n线下展会\n线上方式 采购周期 采购旺季\n采购淡季\n常规周期 考虑因素 质量需求\n宏观需求\n微观需求 决策人 角色细分\n角色责任\n角色关注点信息 客户焦点 售价折扣\n明细订购 报价 汇率:每日关注 (汇率浮动超过2%，需重新报价) 报价越详细越好，客户会挑详细且价格实惠的回复，节约沟通时间 价格条款:FOB、CIF、CFR、EXT 付款方式:L/C、T/T、D/P 报价形式: F0B(船上交货) CRF(成本+运费) CIF(成本+运费保险费) 分类 缩写 全称 中文翻译 中文解释 价格条款 FOB Free on Board 离岸价格 卖方负责将货物装上船，买方承担之后的运输及相关费用。 CIF Cost, Insurance, and Freight 成本、保险加运费 卖方负责支付到达目的港的运费和保险费，买方负责卸货。 CFR Cost and Freight 成本加运费 卖方负责运费到目的港，买方承担卸货及后续费用。 EXW Ex Works 工厂交货价 买方从卖方工厂提货，卖方不承担运输及保险费用。 付款方式 L/C Letter of Credit 信用证 买方通过银行提供担保，卖方在交单后收到货款。 T/T Telegraphic Transfer 电汇 买方通过银行直接将款项汇给卖方账户。 D/P Documents Against Payment 付款交单 买方支付货款后才能从银行获得提货单据。 报价计算 $\\text{PNC} = \\text{工厂含税价} - \\text{退税}$ $\\text{退税(Tax Rebate)}=\\frac{\\text{工厂含税价}}{1 + \\text{增值税率}} \\times \\text{退税率}$ $\\text{EXW} = \\text{PNC} + \\text{利润}$ $\\text{FOB} = \\text{EXW} + \\text{内陆运费} + \\text{报关费用}$ $\\text{CFR} = \\text{FOB} + \\text{国际运费}$ $\\text{CIF} = \\text{FOB} + \\text{国际运费} +\\text{保险费}$ 谈价回询盘 客户直接谈单不讲价优质的客户，遇到了要珍惜 讲价的客户同样优质说明有下单的打算 压价格，全市场比价需要放弃! 签合同 订购单\n直接签订:客户发P0、业务回PI、双方签章 先给条款、授权书、后签章 收到订金才算完成 备料生产 收到定金后\n针对工厂:下生产通知 针对外贸公司:下采够单给供应商 准备物料以及询问客人唛头商标要求 跟单 如果有专人跟单，业务追跟单就可以 如果是业务跟单，需要业务紧密和工厂联系，随时了解生产情况并及时反馈给客户 验货 如果客户要自己验货(客户专门指派验货机构):在交期一周前约客户检查(查货) 如果客户不验货需陪同去验货，确认无误后再装货 工厂在生产结束、贫物装箱完毕后需要提供装箱单给外贸公司装箱单包括: 货物数量 箱子的尺寸重量 件数 规格 等 验货后，发货前，工厂应要求外贸公司提前给到进仓图/单，工厂将货物送至指定港口仓库，提前安排好进仓预约手续 商检 确定货物是否需要商检 国家法定商检产品 (给工厂说明商检要求，并提供出口合同，发票等商检所需的资料告诉工厂产品的出口口岸) 在发货前一周拿到商检凭证/合格证等才能发货 订舱 FOB，客户指定代理公司，至少提前1周和货代公司订舱，并把S0拿到手 如果是CIF/CNF，应尽早询问船期，运价开船口岸等 选择价格优惠、信誉好、船期合适的船公司，并告知客户确认 装柜拖车 装车资料 装柜时间 柜型 订舱号 订单号 车牌号 要求工厂装好集装箱之后一定要上封条 报关通关 通常要给报关留出两天时间(船截关前) 委托报关时，应提供一份装柜名录(装货单汇总清单)15个环节: 出口申报 审核单证 查验货物 办理征税 清关放行 出口货物报关单 出口许可证 装货单或运单 商业发票 装箱单 出口收汇核销单 海关需要的证明 获得运输文件 (货物运至港口仓库后，截关前)督促船公司出提单草本及运费，业务员和客人/客人清关代理 确认提单草稿信息，确认后再让船公司出正本提单 公司需及时支付运杂费，付款后，及时向船运公司索要提单正本 LC条款，按L/C要求提供的文件做齐 收款 有些在签订购单合同时付定金，收尾款有些在装柜拖车前、有些在报关后（具体看各个公司安排）；有些在签订购单合同时付全款\n收款前:发提单(副本)给客户，催客户付尾款，(切记)尾款收齐后再给正本提单给客人\n交单结汇 信用证L/C收汇在规定时间内备齐全部单证，严格审单，确保无误后交bank议付 电汇 T/T收汇 取得提单后马上传提单给客人付款确认收到余款后在讲提单正本和其他文件给客人(同收款) 如果是要求收全款才能做柜的，在收款后再安排拖柜，拿到提单后可立刻寄正本提单给客人 直接付款 核销 开户 申请书 对外经贸部门批准的经营进出口业务批件 领单 单位介绍信 开户单位印鉴卡 核销 核销单 银行出具的“出口收汇核销专用联” 其他材料 收汇起一个月内办理 退税 在30天内办理 出口企业退税登记 核销信息上报国税局 货物出口 得到“出口企业退税登记表”后，按登记的要求填写，并按要求提 交所需的各项资料 业务售后 每笔订单业务完成后，做好登记，包括电脑和书面，便于后续查询(复盘) 所有文件备份 ","date":"2024-12-31T00:00:00Z","permalink":"https://ydashu.github.io/p/b2b%E5%A4%96%E8%B4%B8%E6%B5%81%E7%A8%8B/","title":"B2B外贸流程"},{"content":"常用搜索语法 语法 语法说明 示例 示例说明 + 同AND，搜索包含多个关键词的结果 搜索 + 引擎 搜索包含【搜索】和【引擎】两个词的页面 OR 或者 搜索 OR 引擎 搜索包含【搜索】或【引擎】两个词的页面 - 减号，不包含减号后面词的页面 搜索引擎 -百度 搜索不包括【百度】的【搜索引擎】的页面 \u0026quot;\u0026quot; 双引号，精确匹配 “搜索引擎” 精确匹配【搜索引擎】这个关键词的页面 * 星号，通配符，模糊搜索，星号代替某个字 搜*引擎 星号可以为任何字 ~ 近义词 ~mobile phone 结果中包含查询的短语以及它的同义词 @ 在用于搜索社交媒体的字词前加上@ trump @twitter 搜索trump的twitter $ 在数字前加上$搜索特定价格 camera $400 搜索400$的camera # 搜索 # 标签 #throwbackthursday 搜索标签throwbackthursday .. 在两个数字之间加上.. 在数字范围内执行搜索 camera 500..1000 搜索价格在500-1000的camera filetype 搜索某一种文件类型的资源 C++ filetype:pdf 搜索类型为pdf的C++网页资源 site 在指定站点搜索 C++ site:https://www.zhihu.com 在知乎中搜索和C++相关的网页 cache 查看网站的 Google 缓存版本，会直接显示缓存页面 cache:weibo.com 查看微博的谷歌快照 info 在网址前加info:，获取网站详情 info:github.com 搜索github网站详情 related 搜索与某个网站有关联的页面 related:sina.com 和新浪网网站结构内容相似的一些其它网站 link 返回所有链接到某个URL地址的网页 link:www.csdn.net 搜索所有含指向【www.csdn.net】链接的网页 inurl 搜索查询词出现在url中的页面 inurl:搜索引擎 搜索链接url中有【搜索引擎】的网页 intitle 搜索查询词出现在页面标题中的页面 intitle:搜索引擎 搜索页面标题中有【搜索引擎】的网页 intext 搜索查询词出现在页面正文中的页面 SEO intext:搜索引擎 在正文包含【搜索引擎】的网页中搜索【SEO】 inanchor 搜索链接锚文字中包含搜索词的页面 inanchor:前端 搜索链接锚文字中包含【前端】的页面 allinurl 页面url中包含多个关键词的页面 allinurl:SEO 搜索引擎优化 相当于：inurl:SEO inurl:搜索引擎优化 allintitle 页面标题中包含多个关键词的页面 allintitle:SEO 搜索引擎优化 相当于：intitle:SEO intitle:搜索引擎优化 allintext 页面正文包含多个关键词的页面 allintext:SEO 搜索引擎优化 相当于：intext:SEO intext:搜索引擎优化 allinanchor 页面链接锚文字包含多个关键词的页面 allinanchor:SEO 搜索引擎优化 相当于：inanchor:SEO inanchor:搜索引擎优化 weather 返回城市的天气/时间/日出时间/日落时间 weather:beijing 显示北京的天气 music 歌手名字+music/songs，返回歌曲 周杰伦 music 返回周杰伦的各首歌曲 num 设置搜索结果数量 num=20 返回20个搜索结果 lr 指定语言搜索 lr=lang_zh-CN 搜索简体中文内容 cr 按国家限制搜索结果 cr=countryCN 仅显示来自中国的网页内容 hl 指定界面语言 hl=en 将界面语言设置为英语 as_qdr 搜索时间范围 as_qdr=d 搜索一天内更新的内容 q 指定搜索关键字 q=搜索引擎 直接使用搜索引擎作为关键词 ncr 禁用国家限制 ncr 显示所有国家的搜索结果 google高级搜索网站 google advanced search\n","date":"2024-12-31T00:00:00Z","permalink":"https://ydashu.github.io/p/google%E6%90%9C%E7%B4%A2%E6%8A%80%E5%B7%A7/","title":"google搜索技巧"},{"content":"插件推荐 插件或应用 功能 软件类型 官方评星 Facebook \u0026amp; Instagram 链接 Facebook 和 Instagram Meta 3.8 Instafeed 链接 Instagram Mintt Studio 4.9 在线商店 在线商店销售渠道 Shopify 无 Inbox 在线客服信息接收 Shopify 4.7 Google \u0026amp; YouTube 链接 Google 和 YouTube Google LLC 4.4 Judge.me Reviews 留评论和导入评论 Judge.me 5 Collective (Supplier) 一件代发，供货商与分销商合作 Shopify 无 Email 邮件营销发送 Shopify 3.8 Search \u0026amp; Discovery 页面筛选、搜索及客户访问数据分析 Shopify 4.5 Hextom: Ultimate Sales Boost 显示促销信息 Hextom 4.8 Collabs 一件代发合作，主页批发板块映射 Shopify 2.4 Metafields Guru 元字段，用于插入技术规格和视频等 256 Development 4.9 Frequently Bought Together 捆绑销售 Code Black Belt 4.9 Flow 创建工作流，联合 Email 使用 Shopify 3.5 易仓科技 链接易仓 ECCANG 无 POWR Contact Form 创建表格，用于收集买家信息 POWR.io 4.7 Translate \u0026amp; Adapt 用户切换语言浏览官网 Shopify 4.5 Pinterest 链接 Pinterest PINTEREST inc 4.6 Shop 链接 Shop Shopify 4.6 ","date":"2024-12-31T00:00:00Z","permalink":"https://ydashu.github.io/p/shopify%E6%8F%92%E4%BB%B6/","title":"shopify插件"},{"content":" wordpress插件遵循非必要不安装和有必要尽可能安装轻量化的插件的原则\n插件/主题的渠道 官方 wordpress后台中相关插件或主题有各自的官网，官网购买即可 第三方 themeforest 破解版：不确定会不会有安全问题，后门之类的问题 免费 freewplugin wplocker 柴郡猫 付费 芒果 搬主题 插件推荐 插件名称 类目 推荐指数 特点 Fluent Forms Form 1 支持插件扩展，如 Google Sheet Contact Form 7 Form 2 轻量化，支持自定义表单；免费 WPForms Form 3 下载量最大 WordPress Media Folder Folder 1 HappyFiles Folder 2 WP Media Folder Folder 2 Folders – Unlimited Folders to Organize Media\u0026hellip; Folder 3 Header Footer Code Manager Google Ads 1 轻量化，支持事件反馈连接代码插入 GTM Google Ads 2 支持设置各种事件跟踪，如按钮点击、表单提交、视频播放等 Site Kit by Google Google Ads 5 集成化配置谷歌广告后台到 WordPress；非轻量化，容易出现 bug 或死机 MonsterInsights Google Ads 4 功能与 Site Kit 类似，但更易用 The SEO Framework SEO 11 原生站点地图 /wp-sitemap.xml，不推荐使用复杂 SEO 插件 Rankmath SEO 12 SEOPress SEO 13 Yoast SEO 14 LiteSpeed Cache 网站性能 1 ACF（Advanced Custom Fields） Custom Field 1 Pods Custom Field Meta Box Custom Field Kadence Shop Kit WooCommerce Kadence 官方自定义产品界面 Greenshift Woo Addon WooCommerce Variation Swatches for WooCommerce WooCommerce 自定义变体样式；可被 Kadence Shop Kit 替代 Intuitive Custom Post Order Master 排序 1 拖拽式排序，超轻量化 Simple Custom Post Order 排序 2 拖拽式排序 Gallery Block Lightbox Lightbox \u0026amp; Gallery 4 轻量（9k，无 jQuery），无需设置，只需将 Gallery 的 Block 改为 Media File WP Featherlight Lightbox \u0026amp; Gallery 5 轻量级（71k，基于 jQuery），无需设置，只需将 Gallery 的 Block 改为 Media File Meow Gallery + Meow Lightbox Lightbox \u0026amp; Gallery 1 支持 ACF 短代码自定义，图形界面优秀 Animate It 动态效果 1 可视化仅支持 Classic Editor；可设置入和出动画，Block Editor 需插入 HTML 代码 Animations for Blocks 动态效果 1 可视化支持 Block Editor；仅可设置入动画 WP Shortcodes Plugin — Shortcodes Ultimate Shortcode Code Snippets Snippet 1 WPCode Snippet X Classic Editor Editor 1 比 Block 更原始的编辑器 GenerateBlock Editor 1 轻量化 Block Elementor Editor Migration, Backup, Staging – WPvivid Backup \u0026amp; Migration X 免费 Block Visibility Visible 控制界面定向可视化；适用于 Block Editor Uncanny Automator Webhook 功能复杂，传统界面 CF7 to Webhook Webhook 设置简单，传统界面 Bit Integrations Webhook 功能多，界面友好 All-in-One WP Migration Migration 最大支持 100G 数据迁移 Easy Table of Content Table of Content 1 轻量化目录插件 Tocer Table of Content 文件过大时影响性能 LuckyWP Table of Contents Table of Content 因安全问题被封禁 Kadence Block 自带 Table of Content Polylang 翻译 手动翻译，自定义能力高 自定义字段插件 功能/特点 ACF（Advanced Custom Fields） Pods Framework Meta Box 主要功能 创建和管理自定义字段 创建自定义字段、内容类型、关系型数据 创建和管理自定义字段，扩展性极高 适用场景 - 增强页面编辑体验\n- 定制化页面内容 - 创建自定义内容类型\n- 高度关系型数据管理 - 灵活的字段管理\n- 定制复杂结构的数据 用户界面 直观，易于上手 界面稍复杂，但功能全面 界面简洁，适合开发者使用 定制化能力 较高，支持多种字段类型 高，支持创建完整的内容类型 非常高，支持自定义字段组和条件逻辑 字段类型支持 - 支持丰富的字段类型（文本、图像、日期等）\n- 第三方扩展较多 - 支持标准字段类型\n- 侧重于内容类型的整体定义 - 支持多种字段类型\n- 可通过扩展添加更多字段类型 模板集成 易于与 WordPress 模板集成，直接通过 PHP 函数调用字段数据 需要更高的开发技能，用于关系型数据时较复杂 通过 PHP 函数或短代码轻松调用字段数据 与第三方集成 支持良好，兼容性较高 集成较少，专注于 WordPress 内部功能 支持丰富的第三方集成，开发者社区活跃 性能表现 性能良好，适合中小型项目 对复杂关系型数据优化良好，但稍占用资源 性能出色，轻量化设计适合复杂项目 高级功能 - ACF Pro 提供更多高级功能（如重复器字段、灵活内容布局等） - 支持关系型字段\n- 轻松管理自定义内容类型 - 提供 Meta Box Builder，便于可视化创建字段组 文档和支持 文档详细，支持社区活跃 文档较少，社区规模小 文档完善，开发者社区活跃 免费/付费 免费版功能有限，高级功能需要付费（ACF Pro） 完全免费 免费版功能丰富，付费版提供高级功能 适合用户 初学者和对 UI 有需求的用户 开发者和对内容类型关系有需求的用户 开发者和需要高度灵活性和扩展性的用户 总结 ACF：适合需要快速实现自定义字段的用户，初学者友好，功能全面，付费版提供更多高级功能。 Pods：专注于内容类型和数据关系管理，适合复杂内容需求，适合开发者。 Meta Box：功能最灵活，适合开发复杂结构的网站或项目，扩展性强，开发者社区支持完善。 编辑器插件 插件名称 类目 文档 视频 评分 速度评级 推荐指数 特点 Classic Editor Classic 文档 - 4.9 1 1 - 最经典的编辑器\n- 支持短代码，支持 HTML 代码 GenerateBlock Block 文档 视频 4.9 2 1 - 轻量化\n- 功能不多，需要配合其他插件。\n- ACF Gallery 需要配合 Meow\n- 动态效果需要配合 Animations for Blocks\n- 排序需要配合 Intuitive Custom Post Order Master Kadence Block 文档 视频1\n视频2 4.9 3 2 - Kadence Shop Kit 必须配合此编辑器\n- WooCommerce 的产品编辑需要配合 Kadence 的 Shop Kit Setup 使用 GreenShift Block 文档 视频 4.7 3 3 - 非轻量化，功能多\n- 适合需要高水平视觉效果的网站 Stackable Block 文档 视频 4.9 3 4 非轻量化，功能多 Essential Block Block 文档 视频 4.8 3 5 Spectra Block 文档 视频 4.7 5 Astra 同个开发 Elementor Page 文档 - 4.6 12 14 拖放式用的最多 Beaver Builder Page 文档 视频 None 12 11 建站速度快 Divi Page 文档 - None 12 14 Oxygen Page 文档 视频 None 11 11 ","date":"2024-12-31T00:00:00Z","permalink":"https://ydashu.github.io/p/wordpress%E6%8F%92%E4%BB%B6/","title":"wordpress插件"},{"content":" 技术 分类 主要作用 HTML 前端 定义网页结构和内容 CSS 前端 美化和布局网页外观 JavaScript 前端 增加网页动态交互 PHP 后端 处理服务器端逻辑，生成动态网页 MySQL 后端 存储和管理数据 语言 前端技术 前端是用户可以直接看到并与之交互的部分，通常在浏览器中运行。\nHTML（HyperText Markup Language） 作用：用来定义网页的结构和内容。 特点： 提供基本的页面结构，例如标题、段落、列表、图片、超链接等。 纯描述性的标记语言，不能提供交互或动态功能。 示例： 1 2 \u0026lt;h1\u0026gt;这是一个标题\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;这是一段文字。\u0026lt;/p\u0026gt; 前端角色：构建网页骨架。 CSS（Cascading Style Sheets） 作用：用来定义网页的样式和布局。 特点： 控制颜色、字体、间距、边框、动画等。 与 HTML 分离，提供更灵活的设计能力。 示例： 1 2 3 4 5 6 7 body { background-color: lightblue; } h1 { color: navy; font-size: 24px; } 前端角色：美化网页外观。 JavaScript 作用：使网页具有交互性和动态功能。 特点： 能操作 HTML 和 CSS 内容（如动态更新内容、修改样式）。 可用于事件处理（如点击按钮、表单验证）。 现代 JavaScript 还可用于前后端（如使用 Node.js）。 示例： 1 2 3 document.getElementById(\u0026#34;button\u0026#34;).addEventListener(\u0026#34;click\u0026#34;, function() { alert(\u0026#34;按钮被点击！\u0026#34;); }); 前端角色：增加网页的动态交互功能。 后端技术 后端是服务器端的工作部分，通常负责业务逻辑、数据处理和数据库交互。\nPHP（Hypertext Preprocessor） 作用：服务器端脚本语言，用于动态生成网页内容。 特点： 能与 HTML 集成，动态生成内容。 处理表单数据、会话管理和文件操作。 与数据库（如 MySQL）配合使用。 示例： 1 2 3 \u0026lt;?php echo \u0026#34;Hello, World!\u0026#34;; ?\u0026gt; 后端角色：处理服务器端逻辑并生成动态内容。 MySQL 作用：关系型数据库管理系统，用于存储和管理网站的数据。 特点： 用于存储用户数据、商品信息等。 支持 SQL 语言（Structured Query Language）来查询和管理数据。 示例： 1 SELECT * FROM users WHERE id = 1; 后端角色：存储和管理网站数据。 关系 基本总结：HTML/CSS -\u0026gt; JavaScript -\u0026gt; PHP/MySQL\n","date":"2024-12-31T00:00:00Z","permalink":"https://ydashu.github.io/p/wordpress%E4%BB%A3%E7%A0%81%E8%AF%AD%E8%A8%80%E5%88%86%E7%B1%BB/","title":"wordpress代码语言分类"},{"content":"区别 外贸/跨境 包含：B2B和B2C 跨境=外贸（国际贸易）；跨境包括跨境进口（进口贸易）和跨境出口（出口贸易） 由于行业俗语的问题，衍生出大部分外贸=B2B出口、跨境=B2C出口\n对比维度 B2B出口 B2C出口 全称 Business to Business Business to Consumer 目标客户 企业、批发商、经销商、零售商 个人消费者 交易规模 大订单，金额高，交易频率较低 小订单，金额低，交易频率较高 销售周期 周期长，需要多轮谈判和沟通 周期短，决策迅速 常见渠道 B2B外贸营销途径 Amazon等电商平台\nShopify等SaaS电商平台 定价模式 可协商定价，灵活性高，批量折扣常见 价格透明，通常为固定定价 市场营销策略 展会推广、行业会议\n专业平台（如Alibaba）营销 社交媒体广告\n用户评价和促销活动 物流模式 批量运输，通常需要海运或空运 小件快递，配送快速 售后服务 提供技术支持、定制服务，关注长期合作 关注用户体验，支持退换货 优势 交易稳定，客户忠诚度高 操作灵活，客户群体广泛 劣势 周期长，涉及复杂流程 竞争激烈，利润率较低 适用行业 制造业、批发业、供应链相关行业 消费品、快速消费品、时尚行业 ","date":"2024-12-31T00:00:00Z","permalink":"https://ydashu.github.io/p/%E5%A4%96%E8%B4%B8-b2b-vs-b2c/","title":"外贸 B2B vs B2C"},{"content":"插件 chrome插件官方网站：chromewebstore\n图片下载 fatkun chrome官方已经下架，需要下载的可以官网手动下载 官网1 官网2 imageye chrome官网安装地址 imageye官网安装地址 Image DP 其他 - chrome搜image或image download - google搜image download chrome extension 阅读器 LinghuBros Reader 支持多种格式：ePub,PDF,MOBI,AZW3,FB2,supports mind map and TTS chrome官网安装地址 LinghuBros官网安装地址 代理 Proxy SwitchyOmega 社交网站翻译 whatsapp Automatic Whatsapp ™ Translator 竞品网站分析 web技术/框架识别 Wappalyzer 网站技术分析：如识别wordpress/shopify/hugo等建站框架识别 google相关 google tag Tag Assistant google tag验证器 Tampermonkey 油猴 添加chrome的脚本插件 chrome官网安装地址 Tampermonkey官网安装地址 官网推荐的脚本网站 工具网站 AI chatgpt X.grok 豆包 kimi 在线ps photopea 免费版有0.5g云空间 支持google drive等 支持本地设备 可安装快捷浏览器版到桌面 稿定 佐糖 在线自动抠图、裁剪、压缩等（高清下载和批量编辑等需要会员） pdf工具 ilovepdf 免费 功能：合并、拆分、压缩、转换、旋转和解锁等 翻译 deepL google translate 国际物流查询 17track 在线接手机码 sms-active 一次性接码 俄罗斯人开发的网站 阅读器 http://fereai.com/reader/ 支持.mobi, .epub, .azw, .azw3, .txt, .prc, 不支持.PDF ","date":"2024-12-30T00:00:00Z","permalink":"https://ydashu.github.io/p/chrome%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E5%92%8C%E5%B7%A5%E5%85%B7%E7%BD%91%E7%AB%99/","title":"chrome常用插件和工具网站"},{"content":" 个人看法，仅供参考\n架构 非电商网站推荐指数 电商网站推荐指数 特点 适用场景 内容 GeneratePress+GenerateBlocks 1 2 网站速度特快 B2B网站；博客网站；基本不需要定制化的woo电商网站 generatepress+GenerateBlocks+ACF+Meow(Gallery\u0026amp;lightbox)+Fluent Forms+FluentSMTP+WP Media folder+Intuitive Custom Post Order+LiteSpeed Cache Blocksy+GenerateBlocks 11 1 网站速度很快 对woo的产品布局定制化不高（有基础的布局调整）的电商网站 blocksy+GenerateBlocks+Fluent Forms+FluentSMTP+WP Media folder+Intuitive Custom Post Order+LiteSpeed Cache+woo GeneratePress+KadenceBlocks 2 11 网站速度快 B2B网站；博客网站 GeneratePress+KadenceBlocks+ACF+Fluent Forms+FluentSMTP+WP Media folder+Intuitive Custom Post Order+LiteSpeed Cache GeneratePress+KadenceBlocks+Kadence shop kit 11 1 网站速度快 对woo的产品布局定制化高的电商网站 GeneratePress+KadenceBlocks+Kadence shop kit+Fluent Forms+FluentSMTP+WP Media folder+Intuitive Custom Post Order+LiteSpeed Cache Greenshift Theme+Greenshift 11 3 动态效果 对woo的产品布局和page定制化高的电商网站 GreenshiftTheme+Greenshift+greenshift addon+Fluent Forms+FluentSMTP+WP Media folder+Intuitive Custom Post Order+LiteSpeed Cache GeneratePress+Greenshift 2 11 动态效果 动态效果定制化高，不需要woo的网站 GeneratePress+Greenshift+greenshift addon+ACF+Fluent Forms+FluentSMTP+WP Media folder+Intuitive Custom Post Order+LiteSpeed Cache BeTheme全家桶 12 12 建站速度快、模板库丰富、网站速度一般、Drag and Drop 建站人员要求低、建站速度要求快的电商网站 Astra+elementor 12 12 建站速度快、模板库丰富、网站速度一般、Drag and Drop 建站人员要求低的电商网站 ","date":"2024-12-30T00:00:00Z","permalink":"https://ydashu.github.io/p/wordpress%E6%9E%B6%E6%9E%84/","title":"wordPress架构"},{"content":"快速的网站架构 可以参考如下：wordpress架构\nCache缓存 wordpress框架下，cache缓存插件有很多，比如：LiteSpeed 、WP Rocket、W3等。下面以hostinger集成的比较好用的LiteSpeed Cache为例\nLiteSpeed Cache 参考文档Hostinger: WordPress LiteSpeed Cache Plugin\n速度对比 LiteSpeed Web Server on VPS \u0026gt; (Hostinger Cloud LsWS) \u0026gt; OpenLiteSpeed ≈ Nginx \u0026gt; Apache\nLiteSpeed Cache是什么 LiteSpeed Cache 是 LiteSpeed Technologies 的一款产品，可优化网页上的动态内容。它具有高级缓存功能和优化功能。LiteSpeed Cache 还可作为插件在多个平台上使用，包括 WordPress\nLiteSpeed Cache配置 前提：只有在LiteSpeed 网络服务器上托管网站的用户才能解锁全部功能\n配置好的文件导出如下，可导入LSCWP_cfg.data: 下载\n通过下载文件，wordpress后台中的LiteSpeed插件中可以导入相关配置\n注意事项\ncdn连接：QUIC.cloud CDN（LiteSpeed Cache原生的）或 Cloudflare API\n不必要的cache setting off: 如Cache Commenters等（看具体的网站）\n图像优化很重要，优化设置\nLazy Load Images没必要打开：除非网站的图片很大，加载很慢\nCrawler打开，其中的手动更新和自动时间设置很重要\nCDN 以LiteSpeed Cache绑定的QUIC.cloud CDN为例\nhostinger原生 vs QUIC.cloud vs Cloudflare hostinger原生\n大部分版本免费（除了最低档）\n实测效果不如另外两个\nQUIC.cloud\n有付费和免费版本\n速度快\nWordpress LiteSpeed Cache原生\nCloudflare\n有付费和免费版本\n速度快\n很常用\nQUIC.cloud CDN配置 更改域名设置Nameservers为quit.cloud指定的Nameservers 设置DNS records 设置各个计划（免费or付费） 测试网站性能 通过此，可以测试网站前后性能对比\nGTmetrix google page insight ","date":"2024-12-30T00:00:00Z","permalink":"https://ydashu.github.io/p/%E6%8F%90%E5%8D%87wordpress%E7%BD%91%E7%AB%99%E9%80%9F%E5%BA%A6/","title":"提升wordpress网站速度"},{"content":" 仅针对2B的\n展会 比较传统的方式，但也是效率很高的方式，因为客户有入会门槛，相当于展会帮忙筛选了高意向客户 比较考验参展人员的各项素质。主要是形象、口语、主动推销、产品的熟悉等素质 主要人员：业务员 主要费用：展费、场地布置、人员的机票和食宿等 第三方网站平台 主要以下主要平台\n阿里巴巴 alibaba 中国制造 made in china 环球资源 global source 网上口碑：阿里\u0026gt; 另外两个 卖家用户：阿里 网上有风评说三个效果都不行。可能是同质化太严重，没有选择差异化的产品或者视觉系统 主要人员：平台运营 主要费用：平台年费、推广费等 独立站 常用的框架：wordpress、第三方saas建站平台等 公司官方网站，需要提供询盘、公司展示、产品展示等功能 SEO优化 推广方式 google ads \u0026ndash; 关键如何圈选2B人群 facebook ads \u0026ndash; 关键如何圈选2B人群 其他 主要人员：建站人员、推广人员 主要费用：域名、服务器、推广费等 社媒 主要平台 通讯 WhatsApp Skype LINE telegarm 俄罗斯人员开发 重隐私 非法交易 骗子也多 WeChat 开发 facebook linkedin 宣传 youtube X TikTok 红人合作一般2C 主要人员：业务员、运营 相关网站、论坛 google或者gpt搜索行业相关的网站和论坛 亚马逊或者B2C网站等电商平台的商家 主要人员：业务员 招标 联合国招标等 需要招标文书等 ","date":"2024-12-27T00:00:00Z","permalink":"https://ydashu.github.io/p/b2b%E5%A4%96%E8%B4%B8%E8%90%A5%E9%94%80%E9%80%94%E5%BE%84/","title":"B2B外贸营销途径"},{"content":" 本文以常见的windows为例，linux和macOS也类似\n远程连接的几种方式 公网ip访问 中继服务器代理访问 如：相关平台向日葵、todesk等；或者自己搭建中继 Tailscale / ZeroTier（Mesh网络） 最推荐的方式 以下是上面三种方式的对比：\n特性 公网直接访问 中继服务器代理访问 Tailscale / ZeroTier（Mesh网络） 复杂度 简单但需要配置安全措施 中等，需配置中继服务器和网络 低，自动配置，用户友好 安全性 低，需要额外的安全措施 中等，通过加密和控制访问提高安全 高，端到端加密，穿透NAT与防火墙 延迟 较低，但受网络状况影响 较高，取决于中继服务器的质量 较低，P2P直连或通过中继优化 穿透NAT能力 较弱，除非配置端口映射 强，可以穿透NAT 强，自动穿透NAT和防火墙 成本 低，通常不需要额外服务 中等，需要租赁中继服务器或服务 免费或收费，取决于使用的服务 扩展性 低，较难实现多设备的管理 中等，依赖中继服务器 高，支持多设备之间的自动连接 tailscale教程 windows版为例\n登录 Tailscale · Best VPN Service for Secure Networks\n点击上面链接登录-推荐使用google或者微软账户登录\n添加设备-下载 复制上述链接并下载\n安装下载好的软件 login 点击log in会跳出网页网站，登录后点击connect就会登录\nLog out 一般会保留登录记录，不过不小心log out了。实测再次log in失效。\n解决方法：\nwin+R ==\u0026gt; control ==\u0026gt; 控制面板 ==\u0026gt; 卸载程序 ==\u0026gt; 找到Tailscale,双击 ==\u0026gt;Repair\n在第二台-控制电脑上登录 第一台电脑登录好后会在网页后台Tailscale显示，上面有IP和是否connect 第二台电脑也按照上述流程登录，这时Machines界面会出现两个。\n右键点击软件图标会出现机器名称和IP 被控电脑的设置 启动远程桌面 打开设置： 按 Windows + I 键打开“设置”应用程序。 访问系统设置： 在“设置”窗口中，点击“系统”。 选择远程桌面： 在左侧菜单中，向下滚动并点击“远程桌面”。 启用远程桌面： 在右侧面板中，将“启用远程桌面”切换到“开”。\n可能会出现一个确认对话框，点击“确认”。\n配置防火墙 打开控制面板： 按 Windows + R 键，输入 control 并按回车键。 访问系统和安全设置： 在控制面板中，点击“系统和安全”。 打开 Windows 防火墙： 点击“Windows Defender 防火墙”。 允许应用通过防火墙： 在左侧面板中，点击“允许应用或功能通过 Windows Defender 防火墙”。 检查远程桌面： 在打开的窗口中，确保“远程桌面”旁边的复选框已选中（包括专用和公用网络）。 验证远程桌面设置 检查用户权限 确保目标设备上的用户账户有权限使用远程桌面。 按 Windows + R 键，输入 SystemPropertiesRemote 并按回车键，打开“系统属性”窗口的“远程”标签。 在“远程桌面”部分，点击“选择用户…”按钮。如何查看现在的账户？ 打开控制面板==\u0026gt;点击“用户帐户”\n本机的用户名是admin。（备注：一般Administrator用户远程最好把密码改复杂，有可能会被黑客暴力破解）\n如何更改密码？ CTRL+ALT+Delete ==\u0026gt; 更改密码\n确认当前用户在允许远程访问的用户列表中，如果没有，请点击“添加”并添加相关用户。 找到和上述用户账户匹配的名称，然后添加进去\n确保计算机不处于睡眠状态： 确保目标计算机设置为在需要远程连接时不会进入睡眠模式，这可能会导致远程连接失败。 操控电脑的操作 打开远程桌面连接： 按 Windows + R 键，输入 mstsc 并按回车。 输入 Tailscale IP 地址： 在“计算机”字段中输入 100.106.57.13（被控电脑的 Tailscale IP），点击“连接”。 输入管理员用户名和密码： 在身份验证窗口中：\n用户名： admin\n密码： AdminPassWord\n","date":"2024-12-27T00:00:00Z","permalink":"https://ydashu.github.io/p/tailscale-%E8%BF%9C%E7%A8%8B%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/","title":"tailscale-远程软件使用教程"},{"content":"今天逛论坛的时候，发现一个1024的文章，写的真不错\n《一针见血》 你有没有发现，人一旦有了权力，就会变得非常的自以为是，变得非常固执，听不进别人的意见。\n为什么会这样呢？\n看到一句话，非常精妙地解释了这个现象：\n人本来就听不进别人的意见，只是有了权力以后，也就懒得再装了。\n《都是临时工》 捷克总统泽曼到外国访问，在捷克驻该国大使馆接受记者采访，一见记者泽曼就先做自我介绍说：\u0026ldquo;我是捷克总统，临时的。\u0026rdquo;\n记者们都笑了，气氛也轻松起来。\n总统先生的诙谐，其实倒是大实话，天下做官的，有哪一个不是临时的。别说做官，连我们做人也都是临时的呢，就这临时一辈子，做完就走人。看有人做官做得那么狠，看有人做人那么用尽心机，就好像他们做官做人都有一万年好做似的。说穿了怕要扫人兴，在这世上，我们个个都是临时工呢。\n《本心》 一书生借宿破寺院，离开后在路上发现行李中夹带了几根稻草，便不顾路途迢迢返回，将稻草交还了寺僧，寺中老僧感佩书生人品，盛情款待。并将自己化缘所得铸成金佛的秘密据实以告。\n书生再次离开后，老僧发现金佛不翼而飞，于是急忙追赶书生，饥寒交迫之下晕倒，被路人以一碗肉救活。老僧赶上书生后，发现他进入一矗立贞洁牌坊的门户，并在窗下听到了书生与贞妇的私情。老僧万念俱灰，叹道：\n不爱稻草爱黄金，贞洁烈妇会情人，和尚临老吃碗肉，如今世上无好人\u0026hellip;\u0026hellip;\n网友留言：\n“忠诚是因为背叛的筹码不够，正派是因为受到的诱惑不够”。\n归根结底，所有的人都没守住自己的本心，老僧起了炫耀之心，书生起了贪财之心，烈妇起了放纵之心。\n《投票》 学校食堂有位阿姨特别好，每次打菜都会给我们打特别多。有一次学校举行活动，请我们投票选出心目中最好的食堂阿姨，我们毫不犹豫地都投给了她。\n那天以后，我们就再也没有见到过她了\u0026hellip;..\n《领导说了一个笑话》 领导说了一个笑话，全办公室哄堂大笑，有抹眼泪的，有捂肚子的，有捶桌子的……\n只有小梅没笑，旁边同事边笑边问她：“你怎么不笑啊？”小梅淡定地说：“我已经辞职了。”\n《学政治的》 大学图书馆里，一个男孩问一个女孩：\u0026ldquo;我能坐你旁边吗？\u0026ldquo;女孩拔高了声音：\u0026ldquo;不！我不想和你过夜！\u0026rdquo;\n图书馆里的学生们都看向了他，他简直尴尬极了。过了几分钟，女孩走到了男孩桌子旁说：\u0026ldquo;我是学心理的，我非常懂男人都在想什么，你现在尴尬吧？\u0026rdquo;\n男孩突然大声说道：\u0026ldquo;一晚上1000？那也太贵了！\u0026rdquo;\n图书馆里的学生们，又震惊地看向女孩。男孩站起来，贴近女孩耳边低声说：\u0026ldquo;我是学政治的，我非常懂怎么毁掉一个人\u0026rdquo;。\n《去，把骨头扔到狗群里》 狼对老虎说：大王不好了，底下那帮狗正在密谋反抗。\n老虎擦擦嘴，淡定地把吃剩下的几根骨头扔给狼：去，把骨头扔到狗群里，回来躺着睡觉就是。狼恍然大悟，依计而行。\n第二天，群狗死伤无数，老虎来巡视慰问：唉！！告诉你们很多次，要团结，不要只顾争夺各自利益，你们怎么就是不听呢？\n《历史》 历史系教授刚走进教室准备上课时，突然从门外冲进两个歹徒。他们不由分说,三拳二脚就把教授打倒在地。\n满堂学生还不明白是怎么回事时，歹徒已经逃跑了。但这位教授站起身来，装作一副若无其事的样子对学生说，请每个同学拿出一张白纸，把刚才发生的事情当作作业叙述交上来。\n同学们写完后交给教授，全班几十个学生，竟有几十种不同的叙述。有的说歹徒打倒教授后，教授跳起来把他们打跑了。有的说教室冲进了两个神经病影响教授上课，被教授赶出去了。有的甚至说冲进了三个人，教授左脚踢飞一个，右脚踢飞一个，一拳又打倒一个在地上，后来他们爬起来逃跑了。教授把学生的描述一一念出来，学生都为他们不同版本的杰作而哄堂大笑。\n最后,只见这位教授抖了抖手里的作业纸说：\n如果你们要问什么是历史，那我告诉你们，这就是历史！\n《苍蝇的演讲》 一个苍蝇化妆成蜜蜂登上了讲坛，发表了关于如何专心采蜜远离污秽的专题演讲，讲到兴奋处，嘴角唾沫飞溅……\n演讲完毕，台下的“蜜蜂们”掌声雷动，有的甚至流下激动的眼泪。\n当它满怀欣慰地向主办方交还蜜蜂面具的时候，发现它的听众也在排队交还。\n后来，它们一起飞向厕所……\n《当愚昧成为主流， 清醒便是犯罪》 领导出差带回来一盒茶叶，把部门的人叫过来品茶。\nA尝了一口说，真香；B尝了一口说，很棒；\nC尝了一口说，很润；\nD尝了一口说，哎呀，不就是白开水吗？\n领导赶紧看看茶壶，然后尴尬地说，忘了放茶叶了。\n过了几天，D因为上班玩游戏被开除了。\n当愚昧成为主流， 清醒便是犯罪\n","date":"2024-12-26T00:00:00Z","permalink":"https://ydashu.github.io/p/%E5%86%85%E6%B6%B5%E7%9F%AD%E6%96%87/","title":"内涵短文"},{"content":"《借钱》 （一） 一个商人向小陈借了20000块，并且写了借据。在还钱的期限快到的时候，小陈突然发现借据丢了，这使他焦急万分！因为他知道，丢失了借据，向他借钱的这个人是会赖账的。小陈的朋友小周知道此事后，对小陈说：“你给这个商人发个短信过去，要他到时候把向你借的25000块还给你。”\n短信发出以后，小陈很快收到了回复，借钱的商人在短信里写道：“我向你借的是20000块，不是25000块，到时候就还你。”\n（二） 上个月，因家里有事急用钱，我跟同事借了两万块，同事二话没说立马就转账给了我。我发微信给他：一个星期后还你，当时他没回我\u0026hellip;\u0026hellip;\n一个星期后，由于忙着准备出国，我竟忘了还钱这事。突然，同事回了条信息：\u0026ldquo;好的\u0026rdquo;。\n我马上就想起来了，于是赶紧把钱还给了他。\n《人性的弱点》 有个老人爱清静，可附近常有小孩玩，吵得他要命。于是他把小孩召集过来说：我这很冷清，谢谢你们让这更热闹，说完每人发三颗糖。孩子们很开心，天天来玩。\n几天后，每人只给2颗。\n再后来，每人给1颗。\n慢慢地，最后就不给了。\n孩子们生气说：以后再也不来这给你热闹了。\n老人清静了。\n抓住人性的弱点，无事不成。\n《校服》 记得初中学校要求统一穿校服，一套80。我抱着撑死胆大的饿死胆小的心态跟我妈报了100，我妈不信，非得问我邻居家的同学。他竟然说校服120！\n至今忘不了老妈心疼的眼神，望着我说：该多少就多少嘛，你还在长身体，你那点零花钱留着自己花！说完给了我120。\n望着邻居家同学，我真心觉得，自愧不如!!\n那个同学现在已经副厅。\n《不厚道》 某男每天施舍给街口一乞丐5元，从不间断。婚后改为2元，生子后改为1元。\n有一天乞丐忍不住问：“先生，为什么你给我的钱越来越少？”答：“独身时没什么压力，后有妻，再有子，生活负担重，只能给1元了。”\n乞丐听后大火：“你太不厚道，再有压力，也不能拿我的钱去养你的家人……”\n##《人情世故，深刻！》\n朋友老李帮我搞定了孩子转学的事，我给了老李5000，老李说什么都不要，我生气地说：拿着，瞧不起我啊！老李接了，说：以后有事不要麻烦我，看不起我。往后有事找老李，老李还是一如既往的热心。\n老李帮同事小王搞定了孩子转学的事，小王说：辛苦了。老李苦笑着说：都是朋友，客气个啥啊。小王说：有时间咱喝点儿。老李说：不用了，用这个钱给孩子买点学习资料吧。此后，老李再没帮过小王…\u0026hellip;\n商业头脑 （一） 一个自助餐厅因顾客浪费严重而效益不好，为了改善这一情况，餐厅规定：凡是浪费食物者罚款10元！\n结果生意一落千丈。\n后经人提点将售价提高10元，规定改为：凡没有浪费食物者奖励10元！\n结果生意火爆且杜绝了浪费行为。\n感悟：让对方感觉占便宜，比给对方真的便宜，更重要。\n（二） 朋友去买牛肉，老板说：“一斤30元，三斤100元。”\n朋友心想：这数学学得不好是真要命啊！随后拿出30元买了1斤，这样买了3次，然后跟老板说：“看到没有，我花90元就买了3斤，你定价定错了！”\n老板笑了笑说：“自从我这么干，每次都可以一下卖掉3斤呢\u0026hellip;\u0026hellip;”\n（三） 男人下岗，在夜市卖炒饭。卖20元一份，生意一般。对面也卖炒饭，卖15元一份，多加一个鸡蛋，生意火爆。原来的同事去看他的时候，替他发愁，问他为啥不降价？\n男人说：“对面摊位也是我的…\u0026hellip;”\n","date":"2024-12-26T00:00:00Z","permalink":"https://ydashu.github.io/p/%E5%86%85%E6%B6%B5%E7%9F%AD%E6%96%87/","title":"内涵短文"},{"content":"Front Matter的3种代码 hugo的Front Matter字段输出有3种形式，分别是\nyaml toml json 详细信息参考官方文档： gohugo.io\n常见的字段 title ：文章标题。自动生成的标题与文件名保持一致。 date：文章创建日期。默认生成的日期为文件创建时的日期。 lastmod：文章最后更新日期。 description：文章简要描述，用于摘要或 SEO 优化。 categories：文章分类。 tags：文章标签。 image：封面图片。 draft：是否为草稿。如果设置为 true，Hugo 将不会编译该文件，文章也不会在页面中显示。 hidden：是否隐藏文章。与 draft 的区别在于，设置为 true 的文章仍然存在，只是不会在页面中显示，但可以通过正确的网址访问。 toml demo 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 +++ author = \u0026#34;Hugo Authors\u0026#34; # 作者名称，用于标识文章的创作者。 title = \u0026#34;Markdown Syntax Guide\u0026#34; # 文章标题，将显示在页面和导航中。 date = \u0026#34;2019-03-11\u0026#34; # 文章的发布日期，用于排序和展示。 description = \u0026#34;Sample article showcasing basic Markdown syntax and formatting for HTML elements.\u0026#34; # 文章的简短描述，通常用于摘要或 SEO。 tags = [ \u0026#34;markdown\u0026#34;, # 文章的标签，用于分类和搜索。标签是灵活的，可以添加多个。 \u0026#34;css\u0026#34;, \u0026#34;html\u0026#34;, \u0026#34;themes\u0026#34;, ] categories = [ \u0026#34;themes\u0026#34;, # 文章的类别，用于组织和过滤内容。每篇文章可以属于一个或多个类别。 \u0026#34;syntax\u0026#34;, ] series = [\u0026#34;Themes Guide\u0026#34;] # 文章系列，通常用于将相关文章组织在一起，例如教程或主题指南系列。 aliases = [\u0026#34;migrate-from-jekyl\u0026#34;] # 别名，用于创建文章的旧路径重定向到新路径。例如，当迁移文章时使用。 image = \u0026#34;pawel-czerwinski-8uZPynIu-rQ-unsplash.jpg\u0026#34; # 文章的封面图片路径，用于展示文章时的视觉效果。 +++ ","date":"2024-12-24T00:00:00Z","permalink":"https://ydashu.github.io/p/hugo-front-matter-%E5%AD%97%E6%AE%B5%E8%AF%B4%E6%98%8E/","title":"hugo-Front Matter 字段说明"},{"content":"hugo:The world’s fastest framework for building websites\n自称是最快的建站框架 静态网站，hugo比hexo快 网站速度hugo \u0026gt; hexo \u0026gt; (wordpresss ? shopify) 可以零成本搭建（本地计算机 + github page等免费host ?+ github action自动触发） 官网：gohugo.io 下面以 windows本地计算机 + github page + github action展示建站流程\n下载并安装hugo 在 Hugo 的 Release 页面找到最新版本的 Hugo ，选择相应版本下载。windows为hugo_extended_X.XXX.X_windows-amd64.zip，X.XXX.X为版本号。\n创建站点 解压文件。在文件夹上方地址栏输入 cmd ，唤起命令行。在命令行中输入 hugo new site test_site ，创建站点。\n环境变量 将 hugo.exe 复制到test_site文件夹中，以避免配置环境变量。\n启动hugo cmd中输入cd test_site 或者关闭cmd窗口并在test_site中重新输入cmd cmd中输入命令hugo server 启动本地站点(通过 Ctrl + C 关闭这一服务)。地址通常是 localhost:1313 。如果页面显示“Page not found”，说明此前的所有配置都是正常无误的。 具体的hugo命令参考官网hugo conmands 配置主题 Hugo 默认是没有主题的，需要到 官网 去下载主题。我使用的主题是 Jimmy Cai 创作的 Stack 主题。接下来的部分内容会以此主题为例。\n下载Stack主题 hugo-theme-stack\n文件调整 将主题下载完成后重命名为hugo-theme-stack并解压至 themes 文件夹中，将test_site/themes/hugo-theme-stack/exampleSite/ 文件夹中 content 和hugo.yaml 复制到test_site/中，并删掉原来的 hugo.toml 和 Content/post/rich-content （rich-content中有需要梯子的链接，hugo server会出现错误），避免出现不兼容的错误。 修改 hugo.yaml 中的 theme 选项，将其修改为theme: hugo-theme-stack 检查网站 启动hugo server 检查网址localhost:1313是否是正常的stack主题 修改配置文件 hugo.yaml 中其他选项修改:\nlanguageCode: zh-cn title: XXX copyright: XXX DefaultContentLanguage: zh-cn hasCJKLanguage: true\n1 2 3 4 5 6 7 8 languages: zh-cn: languageName: 中文 title: ydashu weight: 1 params: sidebar: subtitle: 配置文件参数介绍 官方文档 stack文档 各项配置解释如下baseurl: https://example.com # 网站的基本 URL 。替换为你自己的网站域名。 languageCode: en-us # 网站的默认语言代码，zh-cn 指中文简体。 theme: hugo-theme-stack # 使用的 Hugo 主题，这里是 Stack 主题。 paginate: 3 # 每页显示的内容数量，通常用于分页设置。 title: Example Site # 网站的标题，会显示在浏览器标签上。 copyright: Example Person # 网站的版权信息，通常显示在页面底部。 # Theme i18n support # Available values: ar, bn, ca, de, el, en, es, fr, hu, id, it, ja, ko, nl, pt-br, th, uk, zh-cn, zh-hk, zh-tw DefaultContentLanguage: en # 设置网站的默认内容语言。可选值见上注释。 # Set hasCJKLanguage to true if DefaultContentLanguage is in [zh-cn ja ko] # This will make .Summary and .WordCount behave correctly for CJK languages. hasCJKLanguage: false # 如果默认语言是中文、日文或韩文，设置为 true 以确保摘要和字数统计正确。 languages: en: languageName: English # 英语语言配置 title: Example Site # 英文站点标题 weight: 1 # 语言权重，数值越小排序越靠前 params: description: Example description # 英文站点描述 zh-cn: languageName: 中文 # 中文语言配置 title: 演示站点 # 中文站点标题 weight: 2 # 中文站点语言权重 params: description: 演示说明 # 中文站点描述 ar: languageName: عربي # 阿拉伯语配置 languagedirection: rtl # 文字方向，从右到左 title: موقع تجريبي # 阿拉伯语站点标题 weight: 3 # 阿拉伯语站点语言权重 params: description: وصف تجريبي # 阿拉伯语站点描述 services: # Change it to your Disqus shortname before using disqus: shortname: \u0026#34;hugo-theme-stack\u0026#34; # Disqus 评论系统的短名称，需替换为你自己的 Disqus 短名称。 # GA Tracking ID googleAnalytics: id: # Google Analytics 追踪 ID，用于网站流量统计。 permalinks: post: /p/:slug/ # 博客文章的永久链接格式，使用文章的 slug 作为路径。 page: /:slug/ # 页面内容的永久链接格式。 params: mainSections: - post # 主内容区域，显示文章内容。 featuredImageField: image # 特色图片字段的名称。 rssFullContent: true # RSS 提要是否包含全文内容。 favicon: # e.g.: favicon placed in `static/favicon.ico` of your site folder, then set this field to `/favicon.ico` (`/` is necessary) # 网站的favicon路径，例如`/favicon.ico`。 footer: since: 2020 # 网站创建年份，通常显示在页脚。 customText: # 自定义页脚文本。 dateFormat: published: Jan 02, 2006 # 发布日期格式。 lastUpdated: Jan 02, 2006 15:04 MST # 最后更新日期格式。 sidebar: emoji: 🍥 # 侧边栏标题旁显示的 emoji。 subtitle: Lorem ipsum dolor sit amet, consectetur adipiscing elit. # 侧边栏的副标题。 avatar: enabled: true # 是否启用头像显示。 local: true # 是否使用本地头像。 src: img/avatar.png # 头像图片路径。 article: math: false # 是否支持数学公式渲染。 toc: true # 是否显示文章目录。 readingTime: true # 是否显示预计阅读时间。 license: enabled: true # 是否启用文章版权信息。 default: Licensed under CC BY-NC-SA 4.0 # 默认版权协议。 comments: enabled: true # 是否启用评论功能。 provider: disqus # 选择的评论提供商，默认为 Disqus。 disqusjs: shortname: # DisqusJS 的短名称。 apiUrl: # DisqusJS 的 API URL。 apiKey: # DisqusJS 的 API Key。 admin: # DisqusJS 的管理员用户名。 adminLabel: # DisqusJS 管理员标签。 utterances: repo: # Utterances 评论系统的 GitHub 仓库地址。 issueTerm: pathname # Utterances 评论系统的议题关联方式，使用页面路径。 label: # Utterances 评论系统的标签。 beaudar: repo: # Beaudar 评论系统的 GitHub 仓库地址。 issueTerm: pathname # Beaudar 评论系统的议题关联方式。 label: # Beaudar 评论系统的标签。 theme: # Beaudar 评论系统的主题。 remark42: host: # Remark42 的主机地址。 site: # Remark42 的站点标识符。 locale: # Remark42 的语言设置。 vssue: platform: # Vssue 使用的平台（例如 GitHub）。 owner: # Vssue 评论仓库的所有者。 repo: # Vssue 评论的 GitHub 仓库地址。 clientId: # Vssue 的 OAuth 应用 Client ID。 clientSecret: # Vssue 的 OAuth 应用 Client Secret。 autoCreateIssue: false # 是否自动创建评论议题。 waline: serverURL: # Waline 评论系统的服务器 URL。 lang: # Waline 的语言设置。 pageview: # 是否启用页面浏览统计。 emoji: # Waline 的 Emoji 表情包地址。 - https://unpkg.com/@waline/emojis@1.0.1/weibo requiredMeta: - name # 评论时需要填写的字段，用户名。 - email # 评论时需要填写的字段，电子邮件地址。 - url # 评论时需要填写的字段，网址。 locale: admin: Admin # Waline 评论系统的管理员名称。 placeholder: # Waline 评论框的占位符文本。 twikoo: envId: # Twikoo 评论系统的环境 ID。 region: # Twikoo 评论系统的部署区域。 path: # Twikoo 评论系统的路径。 lang: # Twikoo 评论系统的语言设置。 cactus: defaultHomeserverUrl: \u0026#34;https://matrix.cactus.chat:8448\u0026#34; # Cactus.Chat 的默认主服务器 URL。 serverName: \u0026#34;cactus.chat\u0026#34; # Cactus.Chat 的服务器名称。 siteName: \u0026#34;\u0026#34; # You must insert a unique identifier here matching the one you registered (See https://cactus.chat/docs/getting-started/quick-start/#register-your-site) # Cactus.Chat 的站点名称，需与注册的标识符匹配。 giscus: repo: # Giscus 评论系统的 GitHub 仓库地址。 repoID: # Giscus 仓库的唯一标识符。 category: # Giscus 的分类名称。 categoryID: # Giscus 分类的唯一标识符。 mapping: # Giscus 的议题关联方式。 lightTheme: # Giscus 的浅色主题设置。 darkTheme: # Giscus 的深色主题设置。 reactionsEnabled: 1 # 是否启用 Giscus 的反应功能。 emitMetadata: 0 # 是否启用 Giscus 的元数据发射功能。 gitalk: owner: # Gitalk 评论系统的仓库所有者。 admin: # Gitalk 评论系统的管理员用户名。 repo: # Gitalk 评论的 GitHub 仓库地址。 clientID: # Gitalk 的 OAuth 应用 Client ID。 clientSecret: # Gitalk 的 OAuth 应用 Client Secret。 cusdis: host: # Cusdis 评论系统的主机地址。 id: # Cusdis 的站点标识符。 widgets: homepage: - type: search # 首页的小部件，搜索功能。 - type: archives # 首页的小部件，文章归档。 params: limit: 5 # 显示的归档文章数量。 - type: categories # 首页的小部件，文章分类。 params: limit: 10 # 显示的分类数量。 - type: tag-cloud # 首页的小部件，标签云。 params: limit: 10 # 显示的标签数量。 page: - type: toc # 页面的小部件，显示文章目录。 opengraph: twitter: # Your Twitter username site: # 你的 Twitter 用户名，将在 OpenGraph 元数据中使用。 # Available values: summary, summary_large_image card: summary_large_image # Twitter 卡片类型。可以选择 `summary` 或 `summary_large_image`，后者显示大图。 defaultImage: opengraph: enabled: false # 是否为没有特色图片的页面启用默认 OpenGraph 图片。 local: false # 是否使用本地图片作为 OpenGraph 图片。 src: # 默认 OpenGraph 图片的路径。 colorScheme: # Display toggle toggle: true # 是否在页面上显示颜色模式切换按钮。 # Available values: auto, light, dark default: auto # 默认的颜色模式。可以选择自动切换（auto），或固定为亮色（light）或暗色（dark）。 imageProcessing: cover: enabled: true # 是否为封面图片启用自动处理功能，例如裁剪、缩放等。 content: enabled: true # 是否为内容图片启用自动处理功能。 ### Custom menu ### See https://stack.jimmycai.com/config/menu ### To remove about, archive and search page menu item, remove `menu` field from their FrontMatter menu: main: [] # 自定义主菜单的配置，可以在这里添加导航链接。 social: - identifier: github # 社交链接的标识符，通常用于指定图标。 name: GitHub # 链接的显示名称。 url: https://github.com/CaiJimmy/hugo-theme-stack # GitHub 个人主页的链接。 params: icon: brand-github # 使用的社交图标，这里是 GitHub 图标。 - identifier: twitter # 另一个社交链接配置，这里是 Twitter。 name: Twitter # Twitter 链接的显示名称。 url: https://twitter.com # Twitter 的链接。 params: icon: brand-twitter # 使用的社交图标，这里是 Twitter 图标。 related: includeNewer: true # 是否在相关文章中包含较新的文章。 threshold: 60 # 相关文章匹配的相似度阈值，范围是0到100。 toLower: false # 是否将标签和分类转换为小写。 indices: - name: tags # 使用标签作为相关文章的匹配依据。 weight: 100 # 标签匹配的权重值。 - name: categories # 使用分类作为相关文章的匹配依据。 weight: 200 # 分类匹配的权重值。 markup: goldmark: renderer: ## Set to true if you have HTML content inside Markdown unsafe: true # 如果 Markdown 中包含 HTML 内容，设置为 true 以允许渲染这些 HTML。 tableOfContents: endLevel: 4 # 目录生成时的最大标题级别。 ordered: true # 目录项是否使用有序列表。 startLevel: 2 # 目录生成时的起始标题级别。 highlight: noClasses: false # 语法高亮时是否禁用 CSS 类名。 codeFences: true # 是否启用代码块语法高亮。 guessSyntax: true # 是否自动猜测代码块的语言进行语法高亮。 lineNoStart: 1 # 代码行号的起始值。 lineNos: true # 是否在代码块中显示行号。 lineNumbersInTable: true # 是否在表格样式中显示行号。 tabWidth: 4 # 代码块中 Tab 的宽度（空格数）。 撰写文章 test_site/content/post/中新建文件夹test_post，在test_post中新建index.md文件，文章需要的图片文件也放入test_post或者床图中。\n在使用 hugo 命令生成的文章的最上面，都有一块被 +++ 或 --- 包裹出来的区域，它的官方名称是 “Front matter”， 用以指定文章的各项属性。参考如下链接： Front Matter 字段说明\n部署到Github page 下载安装git Git官网下载git 安装git，默认配置，一直点下一步 新建Github仓库 登录github账号,假设账号名为my_github_username 新建一个 Github 仓库，仓库名为 my_github_username.github.io，权限设置为 public. 备注（如果仓库中已经存在这个仓库名，可以换成my_github_account.github.io/XXX） 修改hugo配置文件 /test_site/hugo.yaml中修改baseurl: https://my_github_username.github.io/\n选择main分支 前往本仓库中的Setting -\u0026gt; Pages -\u0026gt; Branch选择main分支，然后保存，会自动开启 https://my_github_username.github.io 的地址，这地址也是以后访问博客的地址\n设置git全局账号信息 按下Win + R, 输入cmd，输入以下代码：\n1 2 git config --global user.name \u0026#34;my_github_username\u0026#34; git config --global user.email \u0026#34;你注册 Github 的邮箱\u0026#34; 编译 生成public网页静态文件夹。 test_site中输入cmd，输入hugo server。从而本地编译执行生成了test_site/public文件夹\n推送 推送仓库至 Github Pages。\n1 2 3 4 5 6 7 8 9 10 11 12 cd public/ # 进入 public 文件夹 git init # 初始化当前文件夹（此处就是 public 文件夹）为一个本地 git 仓库 git add . # 将当前文件夹的所有文件加入到暂存区 git commit -m \u0026#34;first commit\u0026#34; # 把相关文件提交到本地仓库 git branch -M main git remote add origin https://github.com/my_github_username/my_github_username.github.io.git # 关联远程仓库。 # 远程仓库地址（git@github.com:username/username.github.io） # 也可以进入 Github 仓库-\u0026gt; Code -\u0026gt; SSH 复制远程仓库地址 git push -u origin main # 把相关文件推送到远程仓库的 main 分支 # 备注：push前需要开代理 检查 检查网站是否正常。https://my_github_username.github.io/\nGithub action自动部署 如果没有进行自动部署，我们每次更新博客时，都需要在已经搭建好环境的电脑上进行、都要手动进行 Hugo 编译，再推送 Public 文件夹到 Github 仓库。自动部署让整个写作+发布流程更加快捷，相当于把Hogo编译推送public文件夹的工作交给了github action。\n新建Github仓库 新建一个 Github 仓库，仓库名为 my_github_username_main，权限设置为 private.\n创建github账号token 点击github右上角账号界面中的Settings/Developer Settings/Personal access tokens/Tokens(classic)或者直接点开下面链接 https://github.com/settings/tokens/new 点击Generate new token (classic) Note: hugo部署 Expiration: No expiration Select scopes: repo workflow 点击Generate token 保存好token，这个token只会出现一次，假设是hugo_deploy_token 创建github action触发代码 新建/test_site/.github/workflows/deploy.yaml,复制以下代码到该文件中：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 name: deploy # 代码提交到main分支时触发github action on: push: branches: - main jobs: deploy: runs-on: ubuntu-24.04 # 原始值为ubuntu-latest，（Ubuntu使用latest会报warn，提示最新支持版本已经改为Ubuntu24.04 steps: - name: Checkout uses: actions/checkout@v4 with: fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v3 with: hugo-version: \u0026#34;latest\u0026#34; extended: true - name: Build Web run: hugo -D - name: Deploy Web uses: peaceiris/actions-gh-pages@v4 with: PERSONAL_TOKEN: ${{ secrets.你的 Token 变量名 }} EXTERNAL_REPOSITORY: 用户名/仓库名 PUBLISH_BRANCH: main PUBLISH_DIR: ./public commit_message: auto deploy 创建.gitignore文件 在hugo主文件创建.gitignore文件，来避免提交不必要的文件\n新建/test_site/.gitignore 将下面代码复制进去 1 2 3 4 5 6 7 # 自动生成的文件 public resources .hugo_build.lock # hugo命令 hugo.exe Token配置 github设置Token 为保证安全，将生成的 Token 保存在仓库的环境变量中\n前往仓库my_github_username_main的 Settings/Secuits/Secrets and variables/Actions 点击New repository secret Name: HUGO_TOKEN Secret: hugo_deploy_token 是上面的创建github账号token生成的token\nhugo设置Token 更改/test_site/.github/workflows/deploy.yaml中的参数PERSONAL_TOKEN\n方法一：直接把HUGO_TOKEN_secret复制过去。这种方法不安全，不推荐 方法二：设置/test_site/.github/workflows/deploy.yaml中的参数PERSONAL_TOKEN PERSONAL_TOKEN: ${{ secrets.HUGO_TOKEN }} 通过调用github仓库my_github_username_main环境变量，比方法一更安全\nhugo主文件上传 hugo主文件上传至my_github_username_main仓库，上传成功后会触发Github Action，来自动部署你的静态页面\n/test_site/界面cmd后，输入以下命令\n1 2 3 4 5 6 git init git add . git commit -m \u0026#34;first commit\u0026#34; git branch -M main git remote add origin https://github.com/my_github_username/my_github_username_main.git git push -u origin main 检查 检查my_github_username_main中的action，看是否有update记录 检查网站 https://my_github_username.github.io是否更新，github编译需要时间，git push成功后不会立马生效 post编辑 推荐使用Obsidian编辑post\n打开本地仓库 /test_site/content/post作为Obsidian的本地仓库路径\n编辑 格式如下图 /test_site/content/post下面有多个post文件夹 文件夹中有个index.md文件 post的图片放在各个post的文件夹中 .ignore文件修改 1 2 3 4 5 6 7 # 自动生成的文件 public resources .hugo_build.lock # hugo命令 hugo.exe Obsidian编辑在/test_site/content/post下会生成一个.obsidian文件夹，需要将这个文件夹也添加进.igniore文件中，修改后如下：\n1 2 3 4 5 public/ resources/ .hugo_build.lock hugo.exe content/post/.obsidian/ 更新网站 首次上传成功后，如果后面又需要上传更新网站\n/test_site/界面cmd后，输入以下命令\n1 2 3 git add . git commit -m \u0026#34;update\u0026#34; git push 链接 官方文档 hugo stack git markdown\n参考文章 brume.top letere\n","date":"2024-12-24T00:00:00Z","permalink":"https://ydashu.github.io/p/hugo%E5%BB%BA%E7%AB%99%E6%B5%81%E7%A8%8B/","title":"hugo建站流程"},{"content":" 内容 WordPress Shopify 适用于 Blog网站、B2B外贸、希望自主可控的B2C（相对更控用VPS、Hosting也可能被扫）、希望手续费低的B2C 一般的B2C(对于违禁品shopify会封)、对手续费不在意的B2C、简单快速上手 核心 Blog为核心的开源平台，后续发展各种主题和插件。 其中的Wocommerce是其中最常用的电商插件。 官方审核的主题和插件在后台可搜，定制化非审核的插件可以导入的模式插入 以电商为核心的盈利为主要目的的闭源平台，有一些主题和插件，但不多 是否可控 产品方面比shopify更可控； 安全方面不确定，感觉不如shopify 产品方面比不可控（违禁品可能被关店）； 安全方面不确定，感觉shopify好 费用 域名费用、hosting或VPS费用、CDN费用（网站流量低可白嫖）、主题和插件费用（破解版可白嫖）、支付网关交易手续费2.9% + 0.30美元左右 域名费用、月租费、 shopify payments支付：支付网关交易手续费； 第三方支付方式(如PayPal或Stripe)：第三方交易手续费、支付网关交易手续费。 支付网关交易手续费、第三方交易手续费：三种月租套餐的费率不同 功能性 定制化程度高 定制化程度低 易用性 相对复杂 相对简单 网站速度 取决于VPS或Hosting、CDN、主题、插件、代码、图片等多种因素。 其他条件不变，wordpress的Gutenberg主题比shopify快 取决于主题、、插件、代码、图片等多种因素 SEO 有很多插件，但是不推荐使用、现在SEO不在于技术，而是内容和站外引流 基本没什么插件 后台界面UI 更传统 更现代 ","date":"2024-12-24T00:00:00Z","permalink":"https://ydashu.github.io/p/wordpress-vs-shopify/","title":"WordPress vs Shopify"},{"content":" 备注：Hosting以honstinger为例，其他的Hosting博主目前还未使用\nVPS vs Hosting 内容 VPS Hosting 适用于 更强的代码能力、更强的主机配置能力；更加自主可控、VPS参数可选更多、预算充足 更快的建站、托管式安装wordpress和cpanel或hpanel(honstinger)等、预算有限 后台界面UI 相对复杂；纯linux代码或者安装cpanel 相对简单；自动安装hpanel(hongstinger)或cpanel(其他的) 网站速度 取决于VPS的参数、带宽的参数、CDN等。 一般来说比Hosting快 一般来说速度如下： wordpress(VPS \u0026gt; Hosting) \u0026gt; shopify 数据库 需要手动配置 自动配置好 费用 较高 较低 优势 主机配置更高、更加自主可控、一般固定ip 一键安装、每日备份、可视化创建邮箱、可视化文件管理、自动配置dns、自动SSL 劣势 很多功能需要手动设置，对建站人的要求高 低配版无固定ip、主机配置低 VPS搭建wordpress的方法 参考如下两个链接：\n腾讯云\n无码开发\nHosting的选择 2024年各服务商 主要Hostinger、IONOS、Bluehost、sitegroud等\n2024年的情况：\n首推Hosinger便宜好用，功能全，支持支付宝、国内银行发行的国际信用卡等支付。hpancel简单大气美观。\n其中IONOS最便宜，但是后台界面做的很差，国内银行发行的国际信用卡支付后有很大概率失败，不推荐。\nBluehost、sitegroud这两个也比较常用，其中sitegroud界面好于Bluehost，差于Hostinger。两者性价比中规中矩。\n小技巧： 可以用google搜索 wordpress hosting或者wordpress hosting coupon等关键词，有些有优惠。比如如下网站：top10.com 备注：这个技巧同样适用于域名的购买： domain coupon namecheap、domain coupon code namecheap等等关键词\n假设已经有另外一个服务商的账号，比如Hosinger。一般都有推广链接，会对推广人有返点并对被推广人优惠\n多渠道对比下，找出最适合的\nHosting初始化wordpress的方法 购买套餐 hostinger\n主要储存空间、访问人数、免费CDN、支持手动备份和静态p等区别，CDN可以用LiteSpeed Cache插件的quic.cloud替代，对储存空间、访问人数、静态ip没有要求的其实差别不大。\n静态IP地址是指在互联网上始终不变的IP地址。对于网站来说，使用静态IP地址有以下几个好处：（来自kimi）\n域名解析稳定性：\n静态IP地址不会改变，因此域名系统（DNS）记录可以永久指向同一个IP地址，这有助于确保域名解析的稳定性和可靠性。 安全性：\n静态IP地址可以更容易地设置防火墙规则和其他安全措施，因为IP地址是已知且不变的。这对于防止未授权访问和DDoS攻击等安全威胁至关重要。 远程访问：\n如果你需要远程访问服务器，静态IP地址可以简化VPN和其他远程访问技术的过程，因为你不需要担心IP地址会改变。 邮件服务：\n使用静态IP地址可以减少邮件服务提供商将你的邮件标记为垃圾邮件的风险，因为动态IP地址有时会被用于发送垃圾邮件。 搜索引擎优化（SEO）：\n虽然搜索引擎优化主要关注网站内容和链接，但拥有一个静态IP地址可以确保你的网站始终可访问，这对于搜索引擎爬虫来说是有利的。 API和集成：\n如果你的网站需要与其他服务或API集成，静态IP地址可以确保这些服务始终能够找到并访问你的服务器。 易于管理：\n静态IP地址使得管理网络和服务器配置变得更加简单，因为你不需要不断更新IP地址相关的配置。 安装wordpress 创建一个新的空白网站，里面的插件和主题都不勾选\n域名配置 设置属于你的域名，推荐namecheap平台。\n服务器位置选择 选择距离你的目标用户近的\nDNS配置 登录你的域名服务商的用户账号，按照下图的操作指南，将域名的dns设置为 ns1.dns-parking.com 和 ns2.dns-parking.com 一般来说会自动生成DNS的记录的key和value。如果要修改，比如改邮箱MX和TXT的记录值==\u0026gt;可在路径“website/Dashboard/Advanced/DNS Zone Editor”下修改.\nDns check网站 DNS Checker\n安装SSL 可在路径“website/Dashboard/Wordpresss/Overview/Core”下开启Force HTTPS这个选项，会自动安装SSL\n邮箱配置 hostinger自带邮箱 上述dns配置完成后，系统会自动生成MX指向hostinger的记录值 mx1.hostinger.com 和 mx2.hostinger.com\n点击Email/Manage/Email Account创建email账户\n在“Configure apps and devices ”这里有Browser和Recommended apps两个选项。如果要配置同步到gmail、outlook、163等支持IMAP/SMTP或POP的邮箱，选择Recommended apps这个选项，这个选项也可以用Browser登录，登录网站为mail.hostinger.com\n配置其他邮箱：以企业微信邮箱为例 配置MX MX: mxbiz1.qq.com 和 mxbiz2.qq.com\n参考文档：https://open.work.weixin.qq.com/help2/pc/15333\n配置TXT SPF 主机记录：@或者为空 记录类型：TXT TXT记录值为：v=spf1 include:spf.mail.qq.com ~all 参考文档为 https://open.work.weixin.qq.com/help2/pc/14554 DKIM 需要按照企业微信的路径”企业微信管理后台-\u0026gt;协作-\u0026gt;邮件-\u0026gt;设置-\u0026gt;DKIM验证-\u0026gt;配置”获取配置信息 参考文档为 https://open.work.weixin.qq.com/help2/pc/19647 DMARC 主机记录：_dmarc 记录类型：TXT 记录值: v=DMARC1; p=none; rua=mailto:mailauth-reports@qq.com 参考文档为 https://open.work.weixin.qq.com/help2/pc/19820 ","date":"2024-12-24T00:00:00Z","permalink":"https://ydashu.github.io/p/wordpress%E4%BD%BF%E7%94%A8vps%E5%92%8Chosting/","title":"wordpress使用VPS和Hosting"},{"content":" 主题名称 推荐指数 速度评级 官方评分 速度 模板库 默认的编辑器 WooCommerce 支持 文档链接 视频链接 GeneratePress 1 1 5 1 少 GenerateBlocks 可以用 GreenShift Woo Addon，但不推荐 官方文档 YouTube 播放列表 Blocksy 2 2 5 2 较多 GreenShift 或 Stackable 配合 GreenShift Woo Addon 自定义产品界面 官方文档 YouTube 播放列表 Kadence 3 3 5 3 较多 Kadence Blocks 配合 Kadence Shop Kit 自定义产品界面 官方文档 YouTube 播放列表 Twenty Twenty 9 9 4 4 无 源生编辑器 支持 官方文档 YouTube 搜索 BeTheme 11 11 无 99 多 Bebuilder 支持 官方文档 YouTube 搜索 Hello Elementor 99 11 14 4.5 少 Elementor 支持 无 YouTube 搜索 Astra 99 11 13 5 非常多 Elementor 支持 官方文档 YouTube 搜索 什么是wordpress主题 主题（Theme） 是一组文件（包括模板、样式表、脚本和媒体）组成的工具，用于定义网站的外观和布局。简单来说，主题决定了你的网站看起来是什么样子，并控制了内容如何在前端呈现。\n主题的作用 wordpress的主题主要控制appearance。如增加如elementor和widgets等组件、Customize中的配置控制、页面的结构和内容呈现。例如：\nindex.php：主模板文件 header.php：定义页面头部 footer.php：定义页面底部 single.php：单篇文章页面模板 page.php：单独页面模板 archive.php：存档页面模板 什么是wordpress编辑器 WordPress编辑器 是用于创建、编辑和管理内容（如文章、页面等）的工具。它是WordPress中最重要的部分之一，负责让用户以可视化的方式编写内容，无需编写代码。\nindex.php：主模板文件 header.php：定义页面头部 footer.php：定义页面底部 single.php：单篇文章页面模板 page.php：单独页面模板 archive.php：存档页面模板 编辑器分类 wordpress编辑器主要分为三个大类\n传统编辑器 classic editor 最为传统的编辑器，wordpress 5.0之前版本的默认编辑器 支持html编辑 现在也常用于woocommerce的产品编辑界面或者配合(ACF+动态变量)使用 区块编辑器 block editor/Gutenberg wordpress 5.0之后版本的默认编辑器 速度比拖拽式编辑器快 魔改版本：GenerateBlocks、GreenShift、Stackable、Kadence Blocks等 页面构建器Page Builders 新手友好，拖拽式编辑 速度慢 常见的elementor、Bebulider、Divi Builder、WPBakery 等等 ","date":"2024-12-24T00:00:00Z","permalink":"https://ydashu.github.io/p/wordpress%E4%B8%BB%E9%A2%98/","title":"wordpress主题"},{"content":"分类设置 建站 wordpress shopify hugo google AI IT 金融 随记 外贸 B2B外贸 B2C外贸 跨境电商 未分类 待完成 google GMC SEO google ads广告类型介绍 google ads优化 ","date":"2024-12-24T00:00:00Z","permalink":"https://ydashu.github.io/p/%E5%8D%9A%E5%AE%A2%E6%80%BB%E8%A7%88/","title":"博客总览"}]